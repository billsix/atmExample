'From Squeak3.9 of 7 November 2006 [latest update: #7067] on 17 July 2007 at 8:56:04 pm'!ProtoObject subclass: #AuthenticatableProxy	instanceVariableNames: 'target isAuthenticated'	classVariableNames: ''	poolDictionaries: ''	category: 'CalculatorService'!!AuthenticatableProxy commentStamp: 'wes 7/9/2007 20:31' prior: 0!asdfasdf!ClassTestCase subclass: #AuthenticatableProxyTest	instanceVariableNames: 'calculatorService'	classVariableNames: ''	poolDictionaries: ''	category: 'CalculatorService'!!AuthenticatableProxyTest commentStamp: 'wes 7/9/2007 20:30' prior: 0!adsfasd!Object subclass: #CalculatorService	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CalculatorService'!ProtoObject subclass: #CustomProxyClass	instanceVariableNames: 'target'	classVariableNames: ''	poolDictionaries: ''	category: 'CalculatorService'!!AuthenticatableProxy methodsFor: 'comparing' stamp: 'wes 7/9/2007 20:12'!authenticateUsername: u Password: p 	isAuthenticated := true .!]style[(22 1 11 1 28)f2b,f2cblue;b,f2b,f2cblue;b,f2! !!AuthenticatableProxy methodsFor: 'comparing' stamp: 'wes 7/9/2007 20:21'!doesNotUnderstand: aMessage 	self isValidUser not		ifTrue: [^ super doesNotUnderstand: aMessage].	^ target perform: aMessage selector withArguments: aMessage arguments!]style[(19 8 3 4 30 5 20 8 6 6 10 8 25 8 10)f2b,f2cblue;b,f2,f2cmagenta;,f2,f2cmagenta;,f2,f2cblue;i,f2,f2cmagenta;,f2,f2cblue;i,f2,f2cblue;i,f2! !!AuthenticatableProxy methodsFor: 'comparing' stamp: 'wes 7/9/2007 20:21'!initializeTarget: t 	target := t!]style[(18 1 3 6 4 1)f2b,f2cblue;b,f2,f2cmagenta;,f2,f2cblue;i! !!AuthenticatableProxy methodsFor: 'comparing' stamp: 'wes 7/9/2007 20:11'!isValidUser	^ isAuthenticated!]style[(11 4 15)f2b,f2,f2cmagenta;! !!AuthenticatableProxy class methodsFor: 'as yet unclassified' stamp: 'wes 7/9/2007 20:20'!target: t 	^ self basicNew initializeTarget: t!]style[(8 1 5 4 28 1)f2b,f2cblue;b,f2,f2cmagenta;,f2,f2cblue;i! !!AuthenticatableProxyTest methodsFor: 'tests' stamp: 'wes 7/9/2007 20:25'!setUp	calculatorService := AuthenticatableProxy target: (CalculatorService new).! !!AuthenticatableProxyTest methodsFor: 'tests' stamp: 'wes 7/9/2007 20:33'!testInvalidAccess	| |	self		should: [ calculatorService add: 1 and: 2]		raise: MessageNotUnderstood !]style[(17 7 4 36 1 6 1 11 20 1)f2b,f2,f2cmagenta;,f2,f2c255149000,f2,f2c255149000,f2,f2cmagenta;,f2! !!AuthenticatableProxyTest methodsFor: 'tests' stamp: 'wes 7/9/2007 20:36'!testValidAccess	calculatorService authenticateUsername: '' Password: ''.	self assert: ( (calculatorService add: 1 and: 2) = 3)			!]style[(15 2 17 23 2 11 2 3 4 12 17 6 1 6 6 5)f2b,f2,f2cmagenta;,f2,f2c255150000,f2,f2c255150000,f2,f2cmagenta;,f2,f2cmagenta;,f2,f2c255150000,f2,f2c255150000,f2! !!CalculatorService methodsFor: 'as yet unclassified' stamp: 'wes 7/9/2007 20:07'!add: first and: second	^ first + second .		! !!CustomProxyClass methodsFor: 'initialization' stamp: 'wes 7/8/2007 21:54'!doesNotUnderstand: aMessage 	Transcript show: 'forwaring the message';		        cr.	^ target perform: aMessage selector withArguments: aMessage arguments!]style[(19 8 3 10 7 23 19 6 10 8 25 8 10)f2b,f2cblue;b,f2,f2cmagenta;,f2,f2c255150000,f2,f2cmagenta;,f2,f2cblue;i,f2,f2cblue;i,f2! !!CustomProxyClass methodsFor: 'initialization' stamp: 'wes 7/8/2007 21:46'!initializeTarget: t 	target := t!]style[(18 1 3 6 4 1)f2b,f2cblue;b,f2,f2cmagenta;,f2,f2cblue;i! !!CustomProxyClass class methodsFor: 'as yet unclassified' stamp: 'wes 7/8/2007 21:56'!target: t 	^ self basicNew initializeTarget: t!]style[(8 1 5 4 28 1)f2b,f2cblue;b,f2,f2cmagenta;,f2,f2cblue;i! !